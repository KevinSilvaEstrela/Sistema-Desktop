
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import tkinter as tk
from config import SUPABASE

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\kevin\OneDrive\Documentos\TKINTER\Sistema-Desktop\assets_login\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class Login(tk.Frame):
    def __init__(self, parent):
        super().__init__(parent)
        self.parent = parent
        self.setup_ui()

    def setup_ui(self):
        self.parent.title("Login")
        largura_tela = self.parent.winfo_screenwidth()
        altura_tela = self.parent.winfo_screenheight()
        self.parent.geometry(f"{largura_tela}x{altura_tela}")
        #self.parent.geometry("1007x660")
        self.parent.configure(bg = "#0B0B0B")


        self.canvas = Canvas(
            self.parent,
            bg = "#0B0B0B",
            height = 660,
            width = 1007,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.pack(fill=tk.BOTH, expand=True)
        
        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = self.canvas.create_image(
            935.0,
            301.0,
            image=self.entry_image_1
        )
        
        self.entry_1 = Entry(
            bd=0,
            bg="#181818",
            fg="#FFFFFF",
            highlightthickness=0
        )
        
        self.entry_1.place(
            x=726.0,
            y=281.0,
            width=418.0,
            height=38.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = self.canvas.create_image(
            935.0,
            409.0,
            image=self.entry_image_2
        )
        
        self.entry_2 = Entry(
            bd=0,
            bg="#181818",
            fg="#FFFFFF",
            highlightthickness=0,
            show="*"
        )
        
        self.entry_2.place(
            x=726.0,
            y=389.0,
            width=418.0,
            height=38.0
        )

        self.canvas.create_rectangle(
            0.0,
            0.0,
            658.0,
            700.0,
            fill="#3D1A56",
            outline="")

        self.text_nome = self.canvas.create_text(
            716.0,
            245.0,
            anchor="nw",
            text="Nome",
            fill="#FFFFFF",
            font=("RobotoSlab Regular", 20 * -1)
        )

        self.text_acessar = self.canvas.create_text(
            716.0,
            130.0,
            anchor="nw",
            text="Acesse os relatórios",
            fill="#FFFFFF",
            font=("RobotoSlab Regular", 36 * -1)
        )

        self.text_senha = self.canvas.create_text(
            716.0,
            350.0,
            anchor="nw",
            text="Senha",
            fill="#FFFFFF",
            font=("RobotoSlab Regular", 20 * -1)
        )

        self.text_acesso = self.canvas.create_text(
            716.0,
            198.0,
            anchor="nw",
            text="Acesso liberado apenas para o administrador",
            fill="#5F5F5F",
            font=("RobotoSlab Regular", 20 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = self.canvas.create_image(
            328.0,
            336.0,
            image=self.image_image_1
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.button_1 = Button(
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.login,
            relief="flat"
        )
        self.button_1.place(
            x=716.0,
            y=490.0,
            width=438.0,
            height=40.0
        )
        
    def login(self):
        username = self.entry_1.get()
        password = self.entry_2.get()

        # Verificar as credenciais no Supabase
        response = SUPABASE.table('auth_user').select('*').eq('username', username).execute()
        if len(response.data) == 0:
            messagebox.showerror("Erro", "Usuário não encontrado")
            return

        user_data = response.data[0]
        if user_data['password'] == password and user_data['is_superuser']:
            self.abrir_dashboard()
        else:
            messagebox.showerror("Erro", "Credenciais inválidas ou usuário não é administrador")
            
    def abrir_dashboard(self):
        from dashboard import Dashboard
        self.parent.destroy()
        new_root = tk.Tk()
        dashboard = Dashboard(new_root)
        dashboard.pack(fill="both", expand=True)
        new_root.mainloop()
        
     
if __name__ == "__main__":
    root = tk.Tk()
    app = Login(root)
    app.pack(fill="both", expand=True)
    app.mainloop()